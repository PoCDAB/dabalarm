general {
	; DAB Transmission mode
	dabmode 1

	; unlimited ETI frames
	nbframes 0

	syslog false

	tist false

	; The management server is a simple TCP server that can present
	; statistics data (buffers, overruns, underruns, etc)
	; which can then be graphed a tool like Munin
	; The doc/stats_dabmux_multi.py tool is a suitable
	; plugin for that. The data fields are documented in doc/STATS.md
	; If the port is zero, or the line commented, the server
	; is not started.
	;managementport 12720
}

remotecontrol {
	; enable the telnet remote control server on the given port
	; This server allows you to read and define parameters that
	; some features export. It is only accessible from localhost.
	; Set the port to 0 to disable the server
	telnetport 12721

	; The remote control is also accessible through a ZMQ REQ/REP socket,
	; and is useful for machine-triggered interactions. It supports the
	; same commands as the telnet RC.
	; The example code in doc/zmq_remote.py illustrates how to use this rc.
	; To disable the zeromq endpoint, remove the zmqendpoint line.
	; By specifying "lo" in the URL, we make the server only accessible
	; from localhost. You can write tcp://*:12722 to make it accessible
	; on all interfaces.
	;zmqendpoint tcp://lo:12722

	; the remote control server makes use of the unique identifiers
	; for the subchannels, services and components. Make sure you
	; chose them so that you can identify them.
}

ensemble {
	; Country code (See ETSI TS 101 756, 5.4 Country Id)
	id 0x8fff		; Netherlands
	ecc 0xe3

	; Localtime offset
	local-time-offset auto

	; Transmit FIG 0/7 (Configuration Information)
	reconfig-counter hash

	; Transmit FIG1 (Ensemble label)
	label "CFNS DAB Radio"	; Max 16 chars
	shortlabel "CFNS"	; Max 8 chars

	announcements {
		alarm {
			cluster 1
			;cluster 255 ; TODO can we use this?

			flags {
				Alarm true
			}

			subchannel sub-alarm
		}
	}
}

services {
	dabch-1 {
		id 0x1dab
		label "dabalarm"
		shortlabel "dabalarm"

		pty 14
		pty-sd static

		announcements {
			Alarm true
			Traffic true
			News true
			Weather true

			clusters 1
		}
	}

	dabch-2 {
		id 0x2dab
		label "Alarm melding"
		shortlabel "Alarm"

		; Programme type (See ETSI TS 101 756, 5.8 Programme type)
		pty 3
		pty-sd static

		announcements {
			Alarm true

			clusters 1
		}
	}
}

subchannels {
	sub-audio {
		type dabplus
		bitrate 128
		id 1
		protection-profile EEP_A
		protection 3

		inputproto zmq
		inputuri "tcp://*:9001"

		zmq-buffer 40
		zmq-prebuffering 20
	}

	sub-alarm {
		type dabplus
		bitrate 128
		id 2
		protection-profile EEP_A
		protection 3

		inputproto zmq
		inputuri "tcp://*:9002"

		zmq-buffer 40
		zmq-prebuffering 20
	}
}

components {
	comp-audio {
		; foreground=0, background=1, multi-channel=2
		type 2

		service dabch-1
		subchannel sub-audio

		user-applications {
			; Add uaType 0x2 with X-PAD App Type = 12 and empty user application data
			userapp "slideshow"

			; Add uaType 0x7 with X-PAD App Type = 16 and user application data = "Basic profile"
			;userapp "spi"
		}

		;datagroup true
		;figtype 0x2
	}

	comp-alarm {
		; foreground=0, background=1, multi-channel=2
		type 2

		service dabch-2
		subchannel sub-alarm

		user-applications {
			; Add uaType 0x2 with X-PAD App Type = 12 and empty user application data
			;userapp "slideshow"

			; Add uaType 0x7 with X-PAD App Type = 16 and user application data = "Basic profile"
			;userapp "spi"
		}

		;datagroup true
		;figtype 0x2
	}
}

outputs {
	; output ETI frames to stdout
	;stdout "fifo:///dev/stdout?type=raw"

	throttle "simul://"
	edi {
		destinations {
			;udp {
			;	protocol udp
			;	sourceport 1232
			;	destination "127.0.0.1"
			;	port 1234
			;}
			tcp {
				protocol tcp
				sourceport 1234
				listenport 1234
			}
		}

		enable_pft false

		fec 2

		packet_spread 95
	}
}

