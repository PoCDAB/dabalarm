[remotecontrol]
telnet=0
telnetport=2121
zmqctrl=0
zmqctrlendpoint=tcp://127.0.0.1:9400

[log]
syslog=0
filelog=0
filename=odr-dabmod.log

; If you don't want to see the flowgraph processing time, set:
show_process_time=0

[input]
; take input from stdin (odr-dabmux in our case)
transport=file
source=/dev/stdin

; When the end of file is reached, it is possible to rewind it
loop=0

[modulator]
;   Mode 'var' uses the method specified in ETSI 300 798 Clause 5.3. This method
; normalizes to 4 times the standard deviation for an approximation of the RMS
; power. So around 6/100000 samples will be truncated and will introduce some
; really minor distortion. But this mode also maximizes the output power. This
; is the gain mode recommended for real world operation as it is based on a DAB
; standard; the only difference is that ODR-DabMod internally calculates this with
; 32-bit floats instead of 8 bits.
gainmode=var

; DAB mode
; Mode I for Band III, Earth
; Mode II for L-Band, Earth and satellite
; Mode III for frequencies below 3 GHz, Earth and satellite
; Mode IV for L-Band, Earth and satellite
; An updated DAB specification (2.1.1) removed Modes II, III and IV, leaving only Mode I.
mode=1

; The digital gain is a value that is multiplied to each sample. It is used
; to tune the chain to make sure that no non-linearities appear up to the
; USRP daughterboard programmable gain amplifier (PGA).
; If there is clipping, the spectral quality of the signal will quickly deteriorate,
; and wide-band noise will be generated.
;
; Be aware that there is a dependency with resampling.
digital_gain=0.8

; Output sample rate. Values other than 2048000 enable
; resampling.
rate=2048000

; Settings for crest factor reduction. Statistics for ratio of
; samples that were clipped are available through the RC.
[cfr]
enable=0

; At what amplitude the signal should be clipped
clip=50.0

; How much to clip the error signal used to compensate the effect
; of clipping
error_clip=0.1

[firfilter]
; The FIR Filter can be used to create a better spectral quality.
enabled=1

[output]
output=soapysdr

; SoapySDR output settings.
[soapyoutput]
device="driver=hackrf"
tx_antenna=0

;master_clock_rate=32768000
master_clock_rate=0
txgain=40
channel=8B
;frequency=234208000
;lo_offset=2048000

; Override automatic analog frontend bandwidth calculation. Units: Hz
;bandwidth=2000000

; Used for running single-frequency networks
[delaymanagement]
; Enable handling of timestamps for SFN
synchronous=0

; Whether to mute the TX when incoming frames have no timestamp
mutenotimestamps=0

; This offset is added to the TIST, and the sum defines the
; TX time of the transmission frame. It can by changed at runtime
; through the remote control.
offset=0.002

; The way the timestamps are interpreted in ODR-DabMod up to v1.1.0 was not
; specified, and you should not assume that two different versions will
; transmit synchronously given the same settings. Always run SFNs with
; identical versions!
; Furthermore, when combining ODR-DabMod with third-party modulators, always
; measure!


[tii]
; If these options are set, TII transmission is enabled.
; DAB modes I and II are supported, and must be set explicitly in
; this file. Reading DAB mode from ETI is not supported.
enable=0
; comb is also known as sub-identifier.
comb=1
; pattern is also known as main-identifier. If you run several transmitters
; in SFN, it is better to use the same pattern for all, and vary the comb.
; Otherwise identification of the transmitters may be more difficult.
pattern=11
; There are two variants of TII being used. The old variant that uses the wrong
; phase on the second carrier in each carrier pairs and is therefore not
; conforming to the specification. Modern analysers can decode both variants,
; while others, like the Philips DAB752 and the VAD v2 monitor are known to
; decode only the old non-conforming variant.
old_variant=0
